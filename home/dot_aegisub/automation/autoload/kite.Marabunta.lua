script_name = "Marabunta"
script_description = "Multi-tool for adapting subtitles: effects, lines, actors from pasted sources"
script_author = "Kiterow"
script_version = "1.6"
menu_embedding = "Kite-Macros/"

local function parse_time(t) t=t:gsub("^%s+",""):gsub("%s+$","") local h,m,s=t:match("(%d+):(%d+):(%d+%.%d+)") if not h or not m or not s then return nil end return (tonumber(h)*3600+tonumber(m)*60+tonumber(s))*1000 end local function time_intersection(start1,end1,start2,end2) local start_int=math.max(start1,start2) local end_int=math.min(end1,end2) if start_int<end_int then return end_int-start_int else return 0 end end local function parse_dialogue(line) line=line:gsub("^%s+",""):gsub("%s+$","") if not line:match("^Dialogue:") then return nil end local commas={} local pos=1 while pos do pos=line:find(",",pos) if pos then table.insert(commas,pos) pos=pos+1 end end if #commas<9 then return nil end local start_pos=line:find(":",1,true)+1 local fields={} for i=1,8 do local field=line:sub(start_pos,commas[i]-1):gsub("^%s+",""):gsub("%s+$","") table.insert(fields,field) start_pos=commas[i]+1 end local effect=line:sub(start_pos,commas[9]-1):gsub("^%s+",""):gsub("%s+$","") table.insert(fields,effect) local text=line:sub(commas[9]+1):gsub("^%s+",""):gsub("%s+$","") table.insert(fields,text) return fields end function ant_effects(subs,sel) local dialog_config={{class="label",x=0,y=0,width=1,height=1,label="Paste lines with effects (Dialogue:...):"},{class="textbox",name="raw",x=0,y=1,width=50,height=10,value=""}} local button,result=aegisub.dialog.display(dialog_config,{"OK","Cancel"}) if button~="OK" then return end local sources={} for line in result.raw:gmatch("[^\r\n]+") do local fields=parse_dialogue(line) if fields then local start_time=parse_time(fields[2]) local end_time=parse_time(fields[3]) local effect=fields[9] if start_time and end_time and effect~="" then table.insert(sources,{start=start_time,end_time=end_time,effect=effect}) end end end if #sources==0 then aegisub.dialog.display({{class="label",label="No valid lines with effects parsed."}},{"OK"}) return end for _,i in ipairs(sel) do local line=subs[i] local t_start,t_end=line.start_time,line.end_time local effects_to_add={} for _,src in ipairs(sources) do local duration=time_intersection(t_start,t_end,src.start,src.end_time) if duration>0 then table.insert(effects_to_add,src.effect) end end if #effects_to_add>0 then if line.effect~="" then table.insert(effects_to_add,1,line.effect) end line.effect=table.concat(effects_to_add,"; ") end subs[i]=line end aegisub.dialog.display({{class="label",label="Effects copy completed."}},{"OK"}) end function ant_lines(subs,sel) local dialog_config={{class="label",x=0,y=0,width=1,height=1,label="Paste lines with text (Dialogue:...):"},{class="textbox",name="raw",x=0,y=1,width=50,height=10,value=""},{class="label",x=0,y=11,width=1,height=1,label="Text format:"},{class="dropdown",name="format",items={"Plain text","As comment"},value="Plain text",x=0,y=12,width=2,height=1}} local button,result=aegisub.dialog.display(dialog_config,{"OK","Cancel"}) if button~="OK" then return end local sources={} for line in result.raw:gmatch("[^\r\n]+") do local fields=parse_dialogue(line) if fields then local start_time=parse_time(fields[2]) local end_time=parse_time(fields[3]) local text=fields[10] if start_time and end_time and text~="" then table.insert(sources,{start=start_time,end_time=end_time,text=text}) end end end if #sources==0 then aegisub.dialog.display({{class="label",label="No valid lines with text parsed."}},{"OK"}) return end local as_comment=result.format=="As comment" for _,i in ipairs(sel) do local line=subs[i] local t_start,t_end=line.start_time,line.end_time local text_to_add="" for _,src in ipairs(sources) do local duration=time_intersection(t_start,t_end,src.start,src.end_time) if duration>0 then local formatted_text=as_comment and "{"..src.text.."}" or src.text if text_to_add=="" then text_to_add=formatted_text else text_to_add=text_to_add.." "..formatted_text end end end if text_to_add~="" then line.text=line.text.." "..text_to_add end subs[i]=line end aegisub.dialog.display({{class="label",label="Lines adaptation completed."}},{"OK"}) end function ant_actor(subs,sel) local dialog_config={{class="label",x=0,y=0,width=1,height=1,label="Paste lines with actor (Dialogue:...):"},{class="textbox",name="raw",x=0,y=1,width=50,height=10,value=""}} local button,result=aegisub.dialog.display(dialog_config,{"OK","Cancel"}) if button~="OK" then return end local sources={} for line in result.raw:gmatch("[^\r\n]+") do local fields=parse_dialogue(line) if fields then local start_time=parse_time(fields[2]) local end_time=parse_time(fields[3]) local actor=fields[5] if start_time and end_time and actor~="" then table.insert(sources,{start=start_time,end_time=end_time,actor=actor}) end end end if #sources==0 then aegisub.dialog.display({{class="label",label="No valid lines with actors parsed."}},{"OK"}) return end for _,i in ipairs(sel) do local line=subs[i] local t_start,t_end=line.start_time,line.end_time local best_actor,best_duration=nil,0 for _,src in ipairs(sources) do local duration=time_intersection(t_start,t_end,src.start,src.end_time) if duration>best_duration then best_duration=duration best_actor=src.actor end end if best_actor then line.actor=best_actor end subs[i]=line end aegisub.dialog.display({{class="label",label="Actors assignment completed."}},{"OK"}) end function marabunta(subs,sel) if #sel==0 then aegisub.dialog.display({{class="label",label="Select at least one line."}},{"OK"}) return end local dialog={{class="label",label="Marabunta - Select Tool",x=0,y=0,width=2,height=1},{class="dropdown",name="tool",items={"Ant Effects","Ant Lines","Ant Actor"},value="Ant Effects",x=0,y=1,width=2,height=1}} local buttons={"Run","Cancel"} local pressed,res=aegisub.dialog.display(dialog,buttons) if pressed=="Cancel" then return end if res.tool=="Ant Effects" then ant_effects(subs,sel) elseif res.tool=="Ant Lines" then ant_lines(subs,sel) elseif res.tool=="Ant Actor" then ant_actor(subs,sel) end aegisub.set_undo_point("Marabunta") end

aegisub.register_macro(menu_embedding..script_name, script_description, marabunta)