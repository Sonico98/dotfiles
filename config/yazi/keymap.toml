# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [
	{ on = [ "<Esc>" ], run = "escape",             				  		desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = [ "<C-c>" ], run = "escape",             				  		desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = [ "q" ],     run = "quit",               				  		desc = "Exit the process" },
	{ on = [ "Q" ],     run = "quit --no-cwd-file", 				  		desc = "Exit the process without writing cwd-file" },
	{ on = [ "W" ], 	run = "close",              				  		desc = "Close the current tab, or quit if it is last tab" },

	# Navigation
	{ on = [ "k" ], run = "arrow -1", 				 				  		desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  				 				  		desc = "Move cursor down" },

	{ on = [ "K" ], run = "arrow -5", 				 				  		desc = "Move cursor up 5 lines" },
	{ on = [ "J" ], run = "arrow 5",  				 				  		desc = "Move cursor down 5 lines" },

	{ on = [ "<S-Up>" ],   run = "arrow -5", 		 				  		desc = "Move cursor up 5 lines" },
	{ on = [ "<S-Down>" ], run = "arrow 5",  		 				  		desc = "Move cursor down 5 lines" },

	{ on = [ "<C-PageUp>" ],   run = "arrow -50%",  				  		desc = "Move cursor up half page" },
	{ on = [ "<C-PageDown>" ], run = "arrow 50%",   				  		desc = "Move cursor down half page" },
	{ on = [ "<PageUp>" ],     run = "arrow -100%", 				  		desc = "Move cursor up one page" },
	{ on = [ "<PageDown>" ],   run = "arrow 100%",  				  		desc = "Move cursor down one page" },

	{ on = [ "h" ], run = [ "leave", "escape --visual --select" ], 	  		desc = "Go back to the parent directory" },
	{ on = [ "l" ], run = "plugin smart-enter", 				  		desc = "Enter the child directory, or open the file" },

	{ on = [ "[" ], run = "seek -1", 				 				  		desc = "Seek up 5 units in the preview" },
	{ on = [ "]" ], run = "seek 1",  				 				  		desc = "Seek down 5 units in the preview" },

	{ on = [ "<Up>" ],    run = "arrow -1", 		 				  		desc = "Move cursor up" },
	{ on = [ "<Down>" ],  run = "arrow 1",  		 				  		desc = "Move cursor down" },
	{ on = [ "<Left>" ],  run = "leave",    		 				  		desc = "Go back to the parent directory" },
	{ on = [ "<Right>" ], run = "plugin smart-enter", 		  		desc = "Enter the child directory, or open the file" },

	{ on = [ "g", "g" ], run = "arrow -99999999", 	 				  		desc = "Move cursor to the top" },
	{ on = [ "G" ],      run = "arrow 99999999",  	 				  		desc = "Move cursor to the bottom" },

	# Selection
	{ on = [ "<Space>" ], run = [ "toggle", "arrow 1" ], 					desc = "Toggle the current selection state" },
	{ on = [ "v" ],       run = "visual_mode",                        		desc = "Enter visual mode (selection mode)" },
	{ on = [ "V" ],   	  run = "toggle_all",            					desc = "Select or unselect all files" },
	{ on = [ "x" ],   	  run = "toggle_all off",           				desc = "Unselect all files" },
	{ on = [ "<C-v>" ],   run = "visual_mode --unset",                		desc = "Enter visual mode (unset mode)" },

	# Operation
	{ on = [ "o" ],      run = "open --interactive",       		  			desc = "Open the selected files interactively" },
	{ on = [ "<Enter>" ],run = "open",                     		  			desc = "Open the selected files" },
	{ on = [ "<C-Enter>" ], run = "open --interactive",       		  		desc = "Open the selected files interactively" },
	{ on = [ "y", "y" ], run = "yank", 		   			   		  			desc = "Copy the selected files" },
	{ on = [ "d", "d" ], run = "yank --cut", 	   		   		  			desc = "Cut the selected files" },
	{ on = [ "Y" ],    	 run = "unyank", 	   		   	   		  			desc = "Cancel the yank status of files" },
	{ on = [ "p", "p" ], run = [ "paste", "escape --selected" ],   			desc = "Paste the files" },
	{ on = [ "P" ],      run = [ "paste --force", "escape --selected" ], 	desc = "Paste the files (overwrite if the destination exists)" },
	{ on = [ "p", "l" ], run = [ "link", "escape --selected" ],    			desc = "Symlink the absolute path of files" },
	{ on = [ "p", "L" ], run = [ "link --relative", "escape --selected" ], 	desc = "Symlink the relative path of files" },
	{ on = [ "p", "h" ], run = [ "hardlink --follow", "escape --selected" ],desc = "Hardlink the absolute path of files" },
	{ on = [ "d", "D" ], run = "remove --permanently", 			  			desc = "Permanently delete the files" },
	{ on = [ "m", "k" ], run = "create --dir",    				  			desc = "Create a directory" },
	{ on = [ "t" ],    	 run = "create",    	  					  		desc = "Create a file or directory (ends with / for directories)" },
	{ on = [ "r", "a" ], run = "rename --cursor=before_ext", 	  			desc = "Rename a file or directory" },
	{ on = [ "r", "A" ], run = "rename --cursor=start", 			  		desc = "Rename a file or directory, from the start of the file" },
	{ on = [ "r", "e" ], run = "rename --empty=stem --cursor=start", 		desc = "Rename a file or directory (clear existing file name)" },
	{ on = [ ";" ],      run = "shell --interactive",                    		  			desc = "Run a shell command" },
	{ on = [ "<C-h>" ],  run = "hidden toggle",        			  			desc = "Toggle the visibility of hidden files" },
	{ on = [ "f" ],      run = "search fd",                		  			desc = "Search files by name using fd" },
	{ on = [ "F" ],      run = "plugin fg", 	  							desc = "Search files by content using ripgrep (fuzzy)" },
	{ on = [ "r", "g" ], run = "plugin fg --args='rg'", 	  				desc = "Search files by content using ripgrep (exact match)" },
	{ on = [ "<C-f>" ],  run = "search none",              		  			desc = "Cancel the ongoing search" },
	{ on = [ "z" ],      run = "plugin zoxide",              	  			desc = "Jump to a directory using zoxide" },
	{ on = [ "Z" ],      run = "plugin fzf",                 	  			desc = "Jump to a directory, or reveal a file using fzf" },
	{ on = [ "<Backspace>" ], run = '''shell "$SHELL" --block --confirm''', desc = "Open shell here" },
	{ on = [ "c", "p" ], run = [ '''shell 'mogrify -format png "$@"' --confirm'''], desc = "Convert to png" },
	{ on = [ "c", "j" ], run = [ '''shell 'mogrify -format jpg "$@"' --confirm'''], desc = "Convert to jpg" },
	# These call my scripts installed into /usr/local/bin/
	{ on = [ "<C-p>" ],  run = '''shell 'kitty_cmds -D' --confirm''',  		desc = "Preview all images in the current directory" },
	{ on = [ "a", "s" ], run = '''shell 'kitty_cmds -s "$@"' --confirm''', 	desc = "Archive selected files (store)" },
	{ on = [ "a", "u" ], run = '''shell 'kitty_cmds -u "$@"' --confirm''', 	desc = "Archive selected files (ultra compression)" },
	{ on = [ "a", "d" ], run = '''shell 'kitty_cmds -d "$@"' --confirm''', 	desc = "Archive selected files (store, split every 2GB)" },
	{ on = [ "<F1>" ],   run = '''shell 'fm-dragon-drop -e "$@"' --confirm''', desc = "Drag selected files" },
	{ on = [ "<F2>" ],   run = '''shell 'fm-dragon-drop -t' --confirm''', 	desc = "Drop files in the current directory" },
	{ on = [ "s", "a" ], run = '''shell 'separateAAC' --confirm''',   		desc = "Separate AAC files" },
	{ on = [ "u" ], 	 run = "shell --confirm ibroadcast-uploader -p 5", 	desc = "Upload folder to iBroadcast" },

	# projects.yazi
	{ on = [ "b", "s" ], run = "plugin projects --args=save", 				desc = "Save current project" },
	{ on = [ "b", "l" ], run = "plugin projects --args=load", 				desc = "Load project" },
	{ on = [ "b", "b" ], run = "plugin projects --args=load_last", 			desc = "Load last project" },
	{ on = [ "b", "d" ], run = "plugin projects --args=delete", 			desc = "Delete project" },
	{ on = [ "b", "D" ], run = "plugin projects --args=delete_all", 		desc = "Delete all projects" },
	{ on = [ "b", "m" ], run = "plugin projects --args='merge current'", 	desc = "Merge current tab to other projects" },
	{ on = [ "b", "M" ], run = "plugin projects --args='merge all'", 		desc = "Merge current project to other projects" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",         			  		desc = "Set linemode to size" },
	{ on = [ "m", "p" ], run = "linemode permissions",  			  		desc = "Set linemode to permissions" },
	{ on = [ "m", "m" ], run = "linemode mtime",        			  		desc = "Set linemode to mtime" },
	{ on = [ "m", "n" ], run = "linemode none",         			  		desc = "Set linemode to none" },

	# Copy
	{ on = [ "y", "p" ], run = "copy path",             			  		desc = "Copy the absolute path" },
	{ on = [ "y", "d" ], run = "copy dirname",          			  		desc = "Copy the path of the parent directory" },
	{ on = [ "y", "f" ], run = "copy filename",         			  		desc = "Copy the name of the file" },
	{ on = [ "y", "n" ], run = "copy name_without_ext", 			  		desc = "Copy the name of the file without the extension" },

	# Filter
	{ on = [ "," ], run = "filter --smart", 		    			  		desc = "Filter the files" },

	# Find
	{ on = [ "/" ], run = "find --smart",            				  		desc = "Find next file" },
	{ on = [ "?" ], run = "find --previous --smart", 				  		desc = "Find previous file" },
	{ on = [ "n" ], run = "find_arrow",              				  		desc = "Go to next found file" },
	{ on = [ "N" ], run = "find_arrow --previous",   				  		desc = "Go to previous found file" },

	# Sorting
	{ on = [ "s", "m" ], run = "sort mtime --reverse=no",                 desc = "Sort by modified time" },
	{ on = [ "s", "M" ], run = "sort mtime --reverse",       			 desc = "Sort by modified time (reverse)" },
	{ on = [ "s", "c" ], run = "sort btime --reverse=no",                  desc = "Sort by created time" },
	{ on = [ "s", "C" ], run = "sort btime --reverse",        			 desc = "Sort by created time (reverse)" },
	{ on = [ "s", "e" ], run = "sort extension --reverse=no",         	     desc = "Sort by extension" },
	{ on = [ "s", "E" ], run = "sort extension --reverse",      			 desc = "Sort by extension (reverse)" },
	{ on = [ "s", "o" ], run = "sort alphabetical --reverse=no",             desc = "Sort alphabetically" },
	{ on = [ "s", "A" ], run = "sort alphabetical --reverse",   			 desc = "Sort alphabetically (reverse)" },
	{ on = [ "s", "n" ], run = "sort natural --reverse=no",                  desc = "Sort naturally" },
	{ on = [ "s", "N" ], run = "sort natural --reverse",        			 desc = "Sort naturally (reverse)" },
	{ on = [ "s", "s" ], run = "sort size --reverse=no",                     desc = "Sort by size" },
	{ on = [ "s", "S" ], run = "sort size --reverse",           			 desc = "Sort by size (reverse)" },
	{ on = [ "c", "s" ], run = [ "sort size", "sort natural --reverse=no" ], desc = "Calculate folder size" },

	# Tabs
	{ on = [ "T" ], run = "tab_create --current", 							desc = "Create a new tab using the current path" },

	{ on = [ "1" ], run = "plugin relative-motions --args=1", 				desc = "Move in relative steps" },
	{ on = [ "2" ], run = "plugin relative-motions --args=2", 				desc = "Move in relative steps" },
	{ on = [ "3" ], run = "plugin relative-motions --args=3", 				desc = "Move in relative steps" },
	{ on = [ "4" ], run = "plugin relative-motions --args=4", 				desc = "Move in relative steps" },
	{ on = [ "5" ], run = "plugin relative-motions --args=5", 				desc = "Move in relative steps" },
	{ on = [ "6" ], run = "plugin relative-motions --args=6", 				desc = "Move in relative steps" },
	{ on = [ "7" ], run = "plugin relative-motions --args=7", 				desc = "Move in relative steps" },
	{ on = [ "8" ], run = "plugin relative-motions --args=8", 				desc = "Move in relative steps" },
	{ on = [ "9" ], run = "plugin relative-motions --args=9", 				desc = "Move in relative steps" },

	{ on = [ "H" ], run = "tab_switch -1 --relative", 						desc = "Switch to the previous tab" },
	{ on = [ "L" ], run = "tab_switch 1 --relative",  						desc = "Switch to the next tab" },

	{ on = [ "<C-,>" ], run = "tab_swap -1", 								desc = "Swap the current tab with the previous tab" },
	{ on = [ "<C-.>" ], run = "tab_swap 1",  								desc = "Swap the current tab with the next tab" },

	# Tasks
	{ on = [ "w" ], run = "tasks_show", 									desc = "Show the tasks manager" },

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             					desc = "Go to the home directory" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     					desc = "Go to the config directory" },
	{ on = [ "g", "d" ],       run = "cd ~/Downloads",   					desc = "Go to the downloads directory" },
	{ on = [ "g", "t" ],       run = "cd /tmp",          					desc = "Go to the temporary directory" },
	{ on = [ "g", "r" ],       run = "cd /",          	 					desc = "Go to the root directory" },
	{ on = [ "g", "z" ],       run = "cd /zram",         					desc = "Go to the zram directory" },
	{ on = [ "g", "o" ],       run = "cd /mnt/onedrive", 					desc = "Go to the onedrive directory" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive", 					desc = "Go to a directory interactively" },

	# Help
	{ on = [ "~" ], run = "help", 											desc = "Open help" },

	# Preview
	{ on = [ "<C-n>" ], run = "plugin hide-preview", 				desc = "Hide the preview pane" },
	{ on = [ "<C-m>" ], run = "plugin max-preview", 					desc = "Enlarge the preview pane" },
]

[tasks]

keymap = [
	{ on = [ "<Esc>" ], run = "close", desc = "Hide the task manager" },
	{ on = [ "<C-c>" ], run = "close", desc = "Hide the task manager" },
	{ on = [ "w" ],     run = "close", desc = "Hide the task manager" },

	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Enter>" ], run = "inspect", desc = "Inspect the task" },
	{ on = [ "x" ],       run = "cancel",  desc = "Cancel the task" },

	{ on = [ "~" ], run = "help", desc = "Open help" }
]

[pick]

keymap = [
	{ on = [ "<C-c>" ],   run = "close",          desc = "Cancel selection" },
	{ on = [ "<Esc>" ],   run = "close",          desc = "Cancel selection" },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the selection" },

	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "K" ], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [ "J" ], run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<S-Up>" ],   run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [ "<S-Down>" ], run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = [ "~" ], run = "help", desc = "Open help" }
]

[input]

keymap = [
	{ on = [ "<C-c>" ],   run = "close",          desc = "Cancel input" },
	{ on = [ "<Enter>" ], run = "close --submit", desc = "Submit the input" },
	{ on = [ "<Esc>" ],   run = "escape",         desc = "Go back the normal mode, or cancel input" },

	# Mode
	{ on = [ "i" ], run = "insert",                              desc = "Enter insert mode" },
	{ on = [ "a" ], run = "insert --append",                     desc = "Enter append mode" },
	{ on = [ "I" ], run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = [ "A" ], run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = [ "v" ], run = "visual",                              desc = "Enter visual mode" },
	{ on = [ "V" ], run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = [ "h" ],       run = "move -1", desc = "Move back a character" },
	{ on = [ "l" ],       run = "move 1",  desc = "Move forward a character" },
	{ on = [ "<Left>" ],  run = "move -1", desc = "Move back a character" },
	{ on = [ "<Right>" ], run = "move 1",  desc = "Move forward a character" },
	{ on = [ "<C-b>" ],   run = "move -1", desc = "Move back a character" },
	{ on = [ "<C-f>" ],   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = [ "b" ],     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = [ "w" ],     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = [ "e" ],     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
	{ on = [ "<A-b>" ], run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = [ "<A-f>" ], run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = [ "0" ],     run = "move -999", desc = "Move to the BOL" },
	{ on = [ "$" ],     run = "move 999",  desc = "Move to the EOL" },
	{ on = [ "<C-a>" ], run = "move -999", desc = "Move to the BOL" },
	{ on = [ "<C-e>" ], run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = [ "<Backspace>" ], run = "backspace",	        desc = "Delete the character before the cursor" },
	{ on = [ "<C-h>" ],       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = [ "<C-d>" ],       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = [ "<C-u>" ], run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = [ "<C-k>" ], run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = [ "<C-w>" ], run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = [ "<A-d>" ], run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = [ "d" ], run = "delete",                              desc = "Delete the selected characters" },
	{ on = [ "D" ], run = [ "delete", "move 999" ],              desc = "Delete until the EOL" },
	{ on = [ "c" ], run = "delete --insert",                     desc = "Delete the selected characters, and enter insert mode" },
	{ on = [ "C" ], run = [ "delete --insert", "move 999" ],     desc = "Delete until the EOL, and enter insert mode" },
	{ on = [ "x" ], run = [ "delete", "move 1 --in-operating" ], desc = "Delete the current character" },
	{ on = [ "y" ], run = "yank",           desc = "Copy the selected characters" },
	{ on = [ "p" ], run = "paste",          desc = "Paste the copied characters after the cursor" },
	{ on = [ "P" ], run = "paste --before", desc = "Paste the copied characters before the cursor" },

	# Undo/Redo
	{ on = [ "u" ],     run = "undo", desc = "Undo the last operation" },
	{ on = [ "<C-r>" ], run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = [ "~" ], run = "help", desc = "Open help" }
]

[completion]

keymap = [
	{ on = [ "<C-c>" ], run = "close",          desc = "Cancel completion" },
	{ on = [ "<Tab>" ], run = "close --submit", desc = "Submit the completion" },

	{ on = [ "<C-k>" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<C-j>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "~" ], run = "help", desc = "Open help" }
]

[help]

keymap = [
	{ on = [ "<Esc>" ], run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = [ "q" ],     run = "close",  desc = "Exit the process" },
	{ on = [ "<C-c>" ], run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = [ "k" ], run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "j" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "K" ], run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [ "J" ], run = "arrow 5",  desc = "Move cursor down 5 lines" },

	{ on = [ "<Up>" ],   run = "arrow -1", desc = "Move cursor up" },
	{ on = [ "<Down>" ], run = "arrow 1",  desc = "Move cursor down" },

	{ on = [ "<S-Up>" ],   run = "arrow -5", desc = "Move cursor up 5 lines" },
	{ on = [ "<S-Down>" ], run = "arrow 5",  desc = "Move cursor down 5 lines" },

	# Filtering
	{ on = [ "/" ], run = "filter", desc = "Apply a filter for the help items" },
]

[confirm]
keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]
